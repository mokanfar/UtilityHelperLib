types
---
array
object
number
string

in a collection we
---
find
read/analyze
remove
add

find/get where
---
index
value
object key
object value
string
number


calculated answers
---
biggest
smallest
last
first
average
sum

bool answers/checks
---
is
is not
is in
is not in
has / contains / includes / matches
does not have / does not contain
is set/exists/is not empty/undefined/null
is empty/is not set/doesnt exist

action functions
---
merge/concat
find/match
combine
remove
copy/clone
store
replace
reverse
swap

filters
---
unique
duplicates
with/append/attach
without/exclude/filter


array funcs
---
filter
remove
add/push
has / contains / includes / matches
is set/exists/is not empty/undefined/null
all calculated answers
does not have / does not contain
is empty/is not set/doesnt exist
get where


object funcs
---
has key
has value where key is
set

number funcs
---
math
isin


string funcs
---
isin
replace
find/match


==========================================================
entire array funcs
---
merge with
combine
sort
filter out all
filter out where
get all where
remove all where
___
with: a value/func, another array


entire obj funcs
--
merge with
get all keys
get all values
___
with: a value/func, another object


array + obj singular operations
---
get / find
remove / delete
push / add
replace / change
has / exists

isempty
isset
isin
has
getallwherev
removeallwhereval
removewhere
is






manipulation licia funcs
---
compact
combine
defaults
find
findKey
findLastIdx
invert
intersect
isMatch
has
HashTable
keys
allKeys
format
lazyRequire
matcher
mapObj
omit
pairs
pick
pluck
remove
safeDel
safeGet
safeSet
sortKeys
splitPath
swap
union
values
waterfall
wrap


system licia funcs
---
fs
invariant
isFile
isNode
isRelative
isWindows
kill
lazyRequire
mkdir
normalizePath
once
open
openFile
ordinal
rmdir
root
slugify
splitPath
splitCase
spaceCase
through
tryIt
waitUntil
waterfall
wrap



scraping licia funcs
---
$
$attr
$data
$offset !!!! wtf this is awesome for lazy loading?!?!
$property
$remove
$safeEls
xpath
fetch
getUrlParam
html
isAbsoluteUrl
isEl
isHidden
isUrl
linkify
normalizeHeader
open
query
ready
selector
slugify
stripHtmlTag
throttle
debounce
toEl
truncate


ramda
---
forEachObjIndexed
invertObj
keys
mapObjIndexed
mergeAll
pathOr
project
values
countBy
findIndex
indexBy
insert
